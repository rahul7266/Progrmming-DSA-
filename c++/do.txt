#include <iostream>
#include<bits/stdc++.h>
using namespace std;
string DTB(int n)
{
    int binaryNum[32];
    int i = 0;
    while (n > 0) {
        binaryNum[i] = n % 2;
        n = n / 2;
        i++;
    }
 string s="";
    for (int j = i - 1; j >= 0; j--)
        s=s+(to_string(binaryNum[j]));
        return s;
}
    int BTD(string s){
        int b=1,num=0;
        for(int i=s.size()-1;i>=0;i--){
            num=num+b*(int(s[i])-int('0'));
            b=b*2;
        }
      return num;  
    }
    string addBinary(string a, string b) {
       
       
        string s="";
        int n=abs(a.size()-b.size());
        for(int i=0;i<n;i++)
            s=s+'0';
        if((BTD(a)==0)&&(BTD(b)==0)){
           if(int(a.size())>=int(b.size())) 
               return a;
            else
              return b;
        }
        cout<<s;
           
        return (s+(DTB(BTD(a)+BTD(b))));
    }
int main() {
    string a="1",b="000";
//cout<<abs(a.length()-b.length());
cout<<abs(int(a.size())-int(b.size()));
	string p=addBinary(a, b);
	return 0;
}
